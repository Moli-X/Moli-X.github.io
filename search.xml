<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HMI触摸屏程序设计详解</title>
      <link href="/2025/03/13/HMI%E8%A7%A6%E6%91%B8%E5%B1%8F%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%A6%E8%A7%A3/"/>
      <url>/2025/03/13/HMI%E8%A7%A6%E6%91%B8%E5%B1%8F%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="HMI触摸屏程序设计详解"><a href="#HMI触摸屏程序设计详解" class="headerlink" title="HMI触摸屏程序设计详解"></a>HMI触摸屏程序设计详解</h1><p>本文详细解析一个工业HMI触摸屏程序，该程序实现了参数设置、状态监控、报警处理等功能，并包含完善的错误检测机制。</p><h2 id="程序功能概述"><a href="#程序功能概述" class="headerlink" title="程序功能概述"></a>程序功能概述</h2><p>本程序主要实现以下功能：</p><ol><li>参数初始化与设置</li><li>实时状态监控</li><li>报警处理与显示</li><li>参数比对与更新</li><li>固件版本检查</li><li>进度显示与更新</li></ol><h2 id="主要模块说明"><a href="#主要模块说明" class="headerlink" title="主要模块说明"></a>主要模块说明</h2><h3 id="1-初始化模块"><a href="#1-初始化模块" class="headerlink" title="1. 初始化模块"></a>1. 初始化模块</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Initial</span><span class="params">()</span></span></span><br><span class="line">    <span class="comment">-- 开启韧体检查</span></span><br><span class="line">    mem.inter.WriteBit(<span class="number">12</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="comment">-- 隐藏进度条</span></span><br><span class="line">    mem.inter.WriteBit(<span class="number">12</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">-- 读取设备参数</span></span><br><span class="line">    <span class="keyword">local</span> ModelCode = link.Read(<span class="string">&quot;&#123;VFD&#125;1@RW-0000&quot;</span>)</span><br><span class="line">    <span class="keyword">local</span> CarryFreq = link.Read(<span class="string">&quot;&#123;VFD&#125;1@RW-0011&quot;</span>)</span><br><span class="line">    <span class="keyword">local</span> FreqCommand = link.Read(<span class="string">&quot;&#123;VFD&#125;1@RW-0014&quot;</span>)</span><br><span class="line">    <span class="keyword">local</span> MaxOperatFreq = link.Read(<span class="string">&quot;&#123;VFD&#125;1@RW-0100&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>初始化模块负责系统启动时的准备工作，包括参数读取和功能设置。</p><h3 id="2-参数处理模块"><a href="#2-参数处理模块" class="headerlink" title="2. 参数处理模块"></a>2. 参数处理模块</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ProcessLinkValues</span><span class="params">()</span></span></span><br><span class="line">    <span class="comment">-- 读取设备状态</span></span><br><span class="line">    value1 = link.Read(<span class="string">&quot;&#123;VFD&#125;1@RW-0232&quot;</span>)</span><br><span class="line">    value2 = link.Read(<span class="string">&quot;&#123;VFD&#125;1@RW-0233&quot;</span>)</span><br><span class="line">    value3 = link.Read(<span class="string">&quot;&#123;VFD&#125;1@RW-0C3B&quot;</span>)</span><br><span class="line">    value4 = link.Read(<span class="string">&quot;&#123;VFD&#125;1@RW-0009&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">-- 写入内存</span></span><br><span class="line">    mem.inter.Write(<span class="number">250</span>, value1)</span><br><span class="line">    mem.inter.Write(<span class="number">251</span>, value2)</span><br><span class="line">    mem.inter.Write(<span class="number">252</span>, value3)</span><br><span class="line">    mem.inter.Write(<span class="number">253</span>, value4)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>参数处理模块负责读取设备状态并存储到内存中。</p><h3 id="3-报警处理模块"><a href="#3-报警处理模块" class="headerlink" title="3. 报警处理模块"></a>3. 报警处理模块</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Alarm</span><span class="params">()</span></span></span><br><span class="line">    <span class="comment">-- 读取报警代码</span></span><br><span class="line">    mem.inter.Write(<span class="number">2100</span>, link.Read(<span class="string">&quot;&#123;VFD&#125;1@RW-2100&quot;</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> AlarmID = mem.inter.Read(<span class="number">2100</span>)</span><br><span class="line">    <span class="keyword">local</span> Error, Warning</span><br><span class="line">    </span><br><span class="line">    <span class="comment">-- 解析报警代码</span></span><br><span class="line">    <span class="keyword">if</span> AlarmID &gt; <span class="number">0</span> <span class="keyword">and</span> AlarmID &lt;= <span class="number">255</span> <span class="keyword">then</span></span><br><span class="line">        Error = AlarmID</span><br><span class="line">        Warning = <span class="number">0</span></span><br><span class="line">    <span class="keyword">elseif</span> AlarmID &gt; <span class="number">255</span> <span class="keyword">then</span></span><br><span class="line">        Error = <span class="number">0</span></span><br><span class="line">        Warning = AlarmID - <span class="number">255</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">-- 更新报警显示</span></span><br><span class="line">    mem.inter.Write(<span class="number">119</span>, Error)</span><br><span class="line">    mem.inter.Write(<span class="number">120</span>, Warning)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>报警处理模块实时监控设备状态，解析并显示报警信息。</p><h3 id="4-参数更新模块"><a href="#4-参数更新模块" class="headerlink" title="4. 参数更新模块"></a>4. 参数更新模块</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">UpdatePara</span><span class="params">(para_table, write_case_table, rt_index)</span></span></span><br><span class="line">    <span class="comment">-- 检查机器码和固件版本</span></span><br><span class="line">    <span class="keyword">if</span> MachineCodeCheck(para_table[<span class="number">1</span>][rt_index], C2000RErrorCodeScreen) == <span class="number">0</span> <span class="keyword">or</span></span><br><span class="line">       (mem.inter.ReadBit(<span class="number">12</span>, <span class="number">2</span>) == <span class="number">1</span> <span class="keyword">and</span> FwVersionCheck(para_table[<span class="number">2</span>][rt_index], FW_VersionErrorScreen) == <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 更新参数</span></span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span>, <span class="number">2</span> <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> i = <span class="number">1</span>, size <span class="keyword">do</span></span><br><span class="line">            UpdateProgress((k - <span class="number">1</span>) * size + i, <span class="number">2</span> * size)</span><br><span class="line">            mem.inter.WriteAscii(<span class="number">130</span>, paraindex, <span class="built_in">string</span>.<span class="built_in">len</span>(paraindex))</span><br><span class="line">            mem.inter.WriteAscii(<span class="number">135</span>, <span class="built_in">tostring</span>(value), <span class="built_in">string</span>.<span class="built_in">len</span>(<span class="built_in">tostring</span>(value)))</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>参数更新模块负责批量更新设备参数，包含进度显示功能。</p><h2 id="关键技术点"><a href="#关键技术点" class="headerlink" title="关键技术点"></a>关键技术点</h2><ol><li><strong>参数互锁</strong>：通过内存位操作实现参数更新互锁</li><li><strong>错误处理</strong>：完善的错误检测和处理机制</li><li><strong>状态管理</strong>：使用内存变量记录设备状态</li><li><strong>进度显示</strong>：实时更新操作进度</li><li><strong>固件检查</strong>：自动检测设备固件版本</li></ol><p><img src="/images/hmi/hmi-interface.jpg" alt="HMI界面示例"></p><h2 id="程序流程图"><a href="#程序流程图" class="headerlink" title="程序流程图"></a>程序流程图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[初始化] --&gt; B[参数读取]</span><br><span class="line">    B --&gt; C&#123;参数检查&#125;</span><br><span class="line">    C --&gt;|通过| D[参数更新]</span><br><span class="line">    C --&gt;|失败| E[错误处理]</span><br><span class="line">    D --&gt; F[状态监控]</span><br><span class="line">    F --&gt; G&#123;报警检测&#125;</span><br><span class="line">    G --&gt;|有报警| H[报警处理]</span><br><span class="line">    G --&gt;|无报警| I[结束]</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本程序展示了工业HMI触摸屏系统的典型实现，包含了人机界面开发中的多个关键技术点。通过模块化设计和完善的保护机制，确保了系统的可靠性和易用性。</p>]]></content>
      
      
      <categories>
          
          <category> 触摸屏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 触摸屏编程 </tag>
            
            <tag> 人机界面 </tag>
            
            <tag> 自动化控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装AnZhiYu主题并个性化配置</title>
      <link href="/2025/03/13/%E5%AE%89%E8%A3%85AnZhiYu%E4%B8%BB%E9%A2%98%E5%B9%B6%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE/"/>
      <url>/2025/03/13/%E5%AE%89%E8%A3%85AnZhiYu%E4%B8%BB%E9%A2%98%E5%B9%B6%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装AnZhiYu主题并个性化配置"><a href="#安装AnZhiYu主题并个性化配置" class="headerlink" title="安装AnZhiYu主题并个性化配置"></a>安装AnZhiYu主题并个性化配置</h1><h2 id="1-主题介绍"><a href="#1-主题介绍" class="headerlink" title="1. 主题介绍"></a>1. 主题介绍</h2><p>AnZhiYu是一款简洁优雅的Hexo主题，具有以下特点：</p><ul><li>响应式设计</li><li>多种配色方案</li><li>丰富的插件支持</li><li>高度可定制化</li></ul><h2 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2. 安装步骤"></a>2. 安装步骤</h2><h3 id="2-1-安装主题"><a href="#2-1-安装主题" class="headerlink" title="2.1 安装主题"></a>2.1 安装主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><h3 id="2-2-修改配置文件"><a href="#2-2-修改配置文件" class="headerlink" title="2.2 修改配置文件"></a>2.2 修改配置文件</h3><p>在<code>_config.yml</code>中添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">anzhiyu</span></span><br></pre></td></tr></table></figure><h2 id="3-个性化配置"><a href="#3-个性化配置" class="headerlink" title="3. 个性化配置"></a>3. 个性化配置</h2><h3 id="3-1-修改主题颜色"><a href="#3-1-修改主题颜色" class="headerlink" title="3.1 修改主题颜色"></a>3.1 修改主题颜色</h3><p>在<code>themes/anzhiyu/_config.yml</code>中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">color:</span></span><br><span class="line">  <span class="attr">primary:</span> <span class="string">&#x27;#3eaf7c&#x27;</span></span><br><span class="line">  <span class="attr">secondary:</span> <span class="string">&#x27;#2d96bd&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-添加社交链接"><a href="#3-2-添加社交链接" class="headerlink" title="3.2 添加社交链接"></a>3.2 添加社交链接</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/Moli-X</span></span><br><span class="line">  <span class="attr">Twitter:</span> <span class="string">https://twitter.com/Moli-X</span></span><br></pre></td></tr></table></figure><h2 id="4-常见问题"><a href="#4-常见问题" class="headerlink" title="4. 常见问题"></a>4. 常见问题</h2><h3 id="4-1-常用命令"><a href="#4-1-常用命令" class="headerlink" title="4.1 常用命令"></a>4.1 常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地预览</span></span><br><span class="line">hexo cl; hexo s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送更新上线</span></span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><h3 id="4-2-如何更新主题？"><a href="#4-2-如何更新主题？" class="headerlink" title="4.2 如何更新主题？"></a>4.2 如何更新主题？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/anzhiyu</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h3 id="4-3-如何自定义样式？"><a href="#4-3-如何自定义样式？" class="headerlink" title="4.3 如何自定义样式？"></a>4.3 如何自定义样式？</h3><p>在<code>source/css/custom.css</code>中添加自定义样式</p><h2 id="5-参考资源"><a href="#5-参考资源" class="headerlink" title="5. 参考资源"></a>5. 参考资源</h2><ul><li><a href="https://anzhiyu.cn/">AnZhiYu官方文档</a></li><li><a href="https://hexo.io/">Hexo官方文档</a></li><li><a href="https://blog.anheyu.com/">安知鱼博客</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 主题 </tag>
            
            <tag> AnZhiYu </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>凸轮表生成功能块 DFB_CamGenerate 技术解析</title>
      <link href="/2025/03/13/%E5%87%B8%E8%BD%AE%E8%A1%A8%E7%94%9F%E6%88%90%E5%8A%9F%E8%83%BD%E5%9D%97%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/"/>
      <url>/2025/03/13/%E5%87%B8%E8%BD%AE%E8%A1%A8%E7%94%9F%E6%88%90%E5%8A%9F%E8%83%BD%E5%9D%97%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="凸轮表生成功能块实现详解"><a href="#凸轮表生成功能块实现详解" class="headerlink" title="凸轮表生成功能块实现详解"></a>凸轮表生成功能块实现详解</h1><h2 id="程序结构"><a href="#程序结构" class="headerlink" title="程序结构"></a>程序结构</h2><p>功能块采用结构化编程，主要包含以下部分：</p><h3 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">FUNCTION_BLOCK DFB_CamGenerate</span><br><span class="line"></span><br><span class="line">VAR_IN_OUT</span><br><span class="line">// 凸轮表命名</span><br><span class="line">Cam: MC_CAM_REF;</span><br><span class="line">END_VAR</span><br><span class="line">VAR_INPUT</span><br><span class="line">// 启动</span><br><span class="line">bExecute: BOOL;</span><br><span class="line">// 凸轮关键点数</span><br><span class="line">iCamPointCount: INT;</span><br><span class="line">// 凸轮主轴长度</span><br><span class="line">lrCutLen: LREAL;</span><br><span class="line">// 主轴各个点位位置</span><br><span class="line">CamMasterPos: ARRAY[0..10] OF LREAL;</span><br><span class="line">// 从轴各个点位位置</span><br><span class="line">CamSlavePos: ARRAY[0..10] OF LREAL;</span><br><span class="line">// 从轴各个点位速度</span><br><span class="line">CamSlaveVel: ARRAY[0..10] OF LREAL;</span><br><span class="line">// 从轴各个点位加速度</span><br><span class="line">CamSlaveAcc: ARRAY[0..10] OF LREAL;</span><br><span class="line">END_VAR</span><br><span class="line">VAR_OUTPUT</span><br><span class="line">// 报警信号</span><br><span class="line">bError: BOOL;</span><br><span class="line">bDone: BOOL;</span><br><span class="line">END_VAR</span><br><span class="line"></span><br><span class="line">VAR</span><br><span class="line">Table: ARRAY[0..20] OF ARRAY[0..3] OF LREAL;</span><br><span class="line">i: INT;</span><br><span class="line">n: INT;</span><br><span class="line">R_TRIG1: R_TRIG;</span><br><span class="line">T1: TON;</span><br><span class="line">END_VAR</span><br><span class="line">VAR_STAT</span><br><span class="line">wErrorID: INT;</span><br><span class="line">END_VAR</span><br><span class="line">VAR_INPUT</span><br><span class="line">bReset: BOOL;</span><br><span class="line">R_TRIG2: R_TRIG;</span><br><span class="line">END_VAR</span><br><span class="line"></span><br><span class="line">//********************凸轮表生成功能块********************</span><br><span class="line">R_TRIG1(CLK:=bExecute  );</span><br><span class="line">T1(IN:=bDone, PT:=T#10MS , Q=&gt; , ET=&gt; );</span><br><span class="line"></span><br><span class="line">IF T1.Q</span><br><span class="line">THEN </span><br><span class="line">bDone:=FALSE;</span><br><span class="line">END_IF</span><br><span class="line"></span><br><span class="line">IF R_TRIG1.Q</span><br><span class="line">THEN </span><br><span class="line">bDone:=FALSE;</span><br><span class="line">IF lrCutLen&lt;=0 OR iCamPointCount&lt;=1 OR CamMasterPos[iCamPointCount-1]&lt;&gt;lrCutLen</span><br><span class="line">THEN</span><br><span class="line">bError:=TRUE;</span><br><span class="line">wErrorID:=1;</span><br><span class="line">ELSE</span><br><span class="line">FOR i:=1 TO (iCamPointCount-1) BY 1 DO</span><br><span class="line">IF CamMasterPos[i]&lt;= CamMasterPos[i-1]//凸轮点位参数合理性判断</span><br><span class="line">THEN </span><br><span class="line">bError:=TRUE;</span><br><span class="line">wErrorID:=2;</span><br><span class="line">END_IF</span><br><span class="line">END_FOR</span><br><span class="line">IF (NOT bError)</span><br><span class="line">THEN </span><br><span class="line">FOR n:=0 TO (iCamPointCount-1) BY 1 DO</span><br><span class="line">Table[n][0]:= CamMasterPos[n];</span><br><span class="line">Table[n][1]:= CamSlavePos[n];</span><br><span class="line">Table[n][2]:= CamSlaveVel[n];</span><br><span class="line">Table[n][3]:= CamSlaveAcc[n];</span><br><span class="line">END_FOR</span><br><span class="line">Cam.nElements:=iCamPointCount;</span><br><span class="line">Cam.byType:=3;</span><br><span class="line">Cam.byVarType:=6;</span><br><span class="line">Cam.xStart:=0.0;</span><br><span class="line">Cam.xEnd:=lrCutLen;</span><br><span class="line">Cam.pce:=ADR(Table);</span><br><span class="line">bDone:=TRUE;</span><br><span class="line">END_IF</span><br><span class="line">END_IF</span><br><span class="line">END_IF</span><br><span class="line"></span><br><span class="line">R_TRIG2(CLK:=NOT bExecute , Q=&gt; );</span><br><span class="line"></span><br><span class="line">IF R_TRIG2.Q</span><br><span class="line">THEN</span><br><span class="line">bError:=FALSE;</span><br><span class="line">bExecute:=FALSE;</span><br><span class="line">END_IF</span><br></pre></td></tr></table></figure><h2 id="主要功能实现"><a href="#主要功能实现" class="headerlink" title="主要功能实现"></a>主要功能实现</h2><h3 id="1-参数校验"><a href="#1-参数校验" class="headerlink" title="1. 参数校验"></a>1. 参数校验</h3><p>程序首先对输入参数进行有效性检查：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IF lrCutLen&lt;=0 OR iCamPointCount&lt;=1 OR CamMasterPos[iCamPointCount-1]&lt;&gt;lrCutLen THEN</span><br><span class="line">    bError := TRUE;</span><br><span class="line">    wErrorID := 1;</span><br><span class="line">END_IF</span><br></pre></td></tr></table></figure><h3 id="2-凸轮表生成"><a href="#2-凸轮表生成" class="headerlink" title="2. 凸轮表生成"></a>2. 凸轮表生成</h3><p>通过循环遍历所有点位，生成凸轮表数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FOR n:=0 TO (iCamPointCount-1) BY 1 DO</span><br><span class="line">    Table[n][0] := CamMasterPos[n];</span><br><span class="line">    Table[n][1] := CamSlavePos[n];</span><br><span class="line">    Table[n][2] := CamSlaveVel[n];</span><br><span class="line">    Table[n][3] := CamSlaveAcc[n];</span><br><span class="line">END_FOR</span><br></pre></td></tr></table></figure><h3 id="3-凸轮表配置"><a href="#3-凸轮表配置" class="headerlink" title="3. 凸轮表配置"></a>3. 凸轮表配置</h3><p>设置凸轮表参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Cam.nElements := iCamPointCount;</span><br><span class="line">Cam.byType := 3;</span><br><span class="line">Cam.byVarType := 6;</span><br><span class="line">Cam.xStart := 0.0;</span><br><span class="line">Cam.xEnd := lrCutLen;</span><br><span class="line">Cam.pce := ADR(Table);</span><br></pre></td></tr></table></figure><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="输入参数"><a href="#输入参数" class="headerlink" title="输入参数"></a>输入参数</h3><table><thead><tr><th>参数名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>bExecute</td><td>BOOL</td><td>执行信号</td></tr><tr><td>iCamPointCount</td><td>INT</td><td>凸轮关键点数</td></tr><tr><td>lrCutLen</td><td>LREAL</td><td>凸轮主轴长度</td></tr><tr><td>CamMasterPos</td><td>ARRAY[0..10] OF LREAL</td><td>主轴点位位置</td></tr><tr><td>CamSlavePos</td><td>ARRAY[0..10] OF LREAL</td><td>从轴点位位置</td></tr><tr><td>CamSlaveVel</td><td>ARRAY[0..10] OF LREAL</td><td>从轴点位速度</td></tr><tr><td>CamSlaveAcc</td><td>ARRAY[0..10] OF LREAL</td><td>从轴点位加速度</td></tr></tbody></table><h3 id="输出参数"><a href="#输出参数" class="headerlink" title="输出参数"></a>输出参数</h3><table><thead><tr><th>参数名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>bError</td><td>BOOL</td><td>错误标志</td></tr><tr><td>bDone</td><td>BOOL</td><td>完成标志</td></tr></tbody></table><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>本功能块适用于以下场景：</p><ol><li>包装机械的同步控制</li><li>印刷机械的套色控制</li><li>纺织机械的张力控制</li><li>自动化装配线的同步运动</li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>确保输入的主轴长度与最后一个点位位置一致</li><li>主轴点位必须按升序排列</li><li>从轴参数需与主轴点位一一对应</li><li>建议在使用前进行参数校验</li></ol>]]></content>
      
      
      <categories>
          
          <category> 控制器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PLC </tag>
            
            <tag> AX8 </tag>
            
            <tag> ST语言 </tag>
            
            <tag> 凸轮表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工业机器人编程指南</title>
      <link href="/2025/03/13/%E5%B7%A5%E4%B8%9A%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/"/>
      <url>/2025/03/13/%E5%B7%A5%E4%B8%9A%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="工业机器人编程指南"><a href="#工业机器人编程指南" class="headerlink" title="工业机器人编程指南"></a>工业机器人编程指南</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>工业机器人是现代智能制造的核心设备之一。本文将详细介绍工业机器人编程的基础知识和实用技巧。</p><h2 id="主流机器人品牌"><a href="#主流机器人品牌" class="headerlink" title="主流机器人品牌"></a>主流机器人品牌</h2><ul><li>ABB</li><li>KUKA</li><li>FANUC</li><li>YASKAWA</li><li>KAWASAKI</li></ul><h2 id="编程语言概述"><a href="#编程语言概述" class="headerlink" title="编程语言概述"></a>编程语言概述</h2><ol><li>RAPID (ABB)</li><li>KRL (KUKA)</li><li>KAREL (FANUC)</li><li>INFORM (YASKAWA)</li><li>AS (KAWASAKI)</li></ol><h2 id="编程基础"><a href="#编程基础" class="headerlink" title="编程基础"></a>编程基础</h2><h3 id="坐标系"><a href="#坐标系" class="headerlink" title="坐标系"></a>坐标系</h3><ul><li>世界坐标系</li><li>工具坐标系</li><li>用户坐标系</li></ul><h3 id="运动指令"><a href="#运动指令" class="headerlink" title="运动指令"></a>运动指令</h3><ul><li>直线运动</li><li>圆弧运动</li><li>关节运动</li></ul><h3 id="程序结构"><a href="#程序结构" class="headerlink" title="程序结构"></a>程序结构</h3><ul><li>主程序</li><li>子程序</li><li>函数</li></ul><h2 id="高级编程技巧"><a href="#高级编程技巧" class="headerlink" title="高级编程技巧"></a>高级编程技巧</h2><ul><li>路径优化</li><li>碰撞检测</li><li>力控制</li><li>视觉集成</li></ul><h2 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h2><ul><li>工作区域划分</li><li>急停装置使用</li><li>速度限制设置</li><li>负载检测</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>掌握工业机器人编程技术对于现代制造业至关重要。通过系统学习和实践，可以充分发挥工业机器人在智能制造中的优势。</p>]]></content>
      
      
      <categories>
          
          <category> 机械手 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器人编程 </tag>
            
            <tag> 工业自动化 </tag>
            
            <tag> 机器人控制 </tag>
            
            <tag> 机器人语言 </tag>
            
            <tag> 运动控制 </tag>
            
            <tag> 安全编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>色标补偿功能块实现详解</title>
      <link href="/2025/01/22/%E8%89%B2%E6%A0%87%E8%A1%A5%E5%81%BF%E5%8A%9F%E8%83%BD%E5%9D%97%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/"/>
      <url>/2025/01/22/%E8%89%B2%E6%A0%87%E8%A1%A5%E5%81%BF%E5%8A%9F%E8%83%BD%E5%9D%97%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="色标补偿功能块实现详解"><a href="#色标补偿功能块实现详解" class="headerlink" title="色标补偿功能块实现详解"></a>色标补偿功能块实现详解</h1><h2 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h2><p>本功能块用于实现色标信号的自动补偿，主要应用于印刷、包装等需要精确套色的自动化设备。通过实时采集色标信号，计算补偿值并输出，实现高精度的套色控制。</p><h2 id="程序结构"><a href="#程序结构" class="headerlink" title="程序结构"></a>程序结构</h2><p>功能块采用结构化编程，主要包含以下部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">FUNCTION_BLOCK DFB_CompensateOneFlag</span><br><span class="line">VAR_IN_OUT</span><br><span class="line">    // 色标抓取轴</span><br><span class="line">    inAxis1: AXIS_REF_SM3;</span><br><span class="line">END_VAR</span><br><span class="line">VAR_INPUT</span><br><span class="line">    iTrig: INT;</span><br><span class="line">    // 功能块启动</span><br><span class="line">    bEnable: BOOL;</span><br><span class="line">    // 色标信号</span><br><span class="line">    bInput1: BOOL;</span><br><span class="line">    // 主轴长度设置</span><br><span class="line">    lrLength: LREAL;</span><br><span class="line">    // 排版数</span><br><span class="line">    lrQueue: LREAL;</span><br><span class="line">    // 牵引速度偏移</span><br><span class="line">    lrAdjust: LREAL;</span><br><span class="line">    // 最大修正值</span><br><span class="line">    lrMaxCorrectionValue: LREAL;</span><br><span class="line">    // 修标目标长度</span><br><span class="line">    lrTargetValue: LREAL;</span><br><span class="line">END_VAR</span><br><span class="line">VAR_OUTPUT</span><br><span class="line">    bDone: BOOL;</span><br><span class="line">    bBusy: BOOL;</span><br><span class="line">    // 抓取误差值输出</span><br><span class="line">    lrValueOut: LREAL;</span><br><span class="line">    bError: BOOL;</span><br><span class="line">    dwErrorID: DWORD;</span><br><span class="line">    lrFirstValueOut: LREAL;</span><br><span class="line">END_VAR</span><br></pre></td></tr></table></figure><h2 id="主要功能实现"><a href="#主要功能实现" class="headerlink" title="主要功能实现"></a>主要功能实现</h2><h3 id="1-初始化处理"><a href="#1-初始化处理" class="headerlink" title="1. 初始化处理"></a>1. 初始化处理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">IF bDone THEN </span><br><span class="line">    bDone := FALSE;</span><br><span class="line">END_IF</span><br><span class="line"></span><br><span class="line">// 位置归零功能块复位</span><br><span class="line">IF FB_SetPosition1.Done OR FB_SetPosition1.Busy OR FB_SetPosition1.Error THEN </span><br><span class="line">    FB_SetPosition1.Execute := FALSE;</span><br><span class="line">END_IF</span><br></pre></td></tr></table></figure><h3 id="2-功能块启动"><a href="#2-功能块启动" class="headerlink" title="2. 功能块启动"></a>2. 功能块启动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dR_TRIG[1](CLK := bEnable);</span><br><span class="line">IF dR_TRIG[1].Q THEN</span><br><span class="line">    bError := FALSE;</span><br><span class="line">    lrFirstData[3] := 0;</span><br><span class="line">    lrFirstData[2] := 0;</span><br><span class="line">    lrFirstData[1] := 0;    </span><br><span class="line">END_IF</span><br></pre></td></tr></table></figure><h3 id="3-高速抓取处理"><a href="#3-高速抓取处理" class="headerlink" title="3. 高速抓取处理"></a>3. 高速抓取处理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TON1(IN := NOT MC_TouchProbe.Done, PT := T#2MS, Q =&gt; , ET =&gt; );</span><br><span class="line">bBusy := TRUE;</span><br><span class="line">IF TON1.Q THEN </span><br><span class="line">    MC_TouchProbe.Execute := TRUE;</span><br><span class="line">END_IF</span><br></pre></td></tr></table></figure><h3 id="4-误差计算与补偿"><a href="#4-误差计算与补偿" class="headerlink" title="4. 误差计算与补偿"></a>4. 误差计算与补偿</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">IF bEnable AND bBusy THEN</span><br><span class="line">    R1(CLK := ABS(Axis1^.fActPosition*lrVirtualTractionSpeedRatio)-lrFirstData[1] &gt; ((lrQueue*lrLength)*1.2), Q =&gt; );</span><br><span class="line">    R3(CLK := MC_TouchProbe.Done, Q =&gt; );</span><br><span class="line">    </span><br><span class="line">    IF R3.Q THEN</span><br><span class="line">        lrFirstData[5] := lrFirstData[4];</span><br><span class="line">        lrFirstData[4] := lrFirstData[3];</span><br><span class="line">        lrFirstData[3] := lrFirstData[2];</span><br><span class="line">        lrFirstData[2] := lrFirstData[1];</span><br><span class="line">        lrFirstData[1] := lrRecorPOS;</span><br><span class="line">        </span><br><span class="line">        IF lrFirstData[2] &gt; 0 THEN</span><br><span class="line">            // 误差计算逻辑</span><br><span class="line">            lrD_value := (MATH.fmod(lrX := lrFirstData[1], lrM := (lrQueue*lrLength)) - </span><br><span class="line">                         (MATH.fmod(lrX := lrFirstData[2], lrM := (lrQueue*lrLength));</span><br><span class="line">            lrValueOut := MIN(MAX(lrD_value, -lrMaxCorrectionValue), lrMaxCorrectionValue);</span><br><span class="line">            bDone := TRUE;</span><br><span class="line">        END_IF</span><br><span class="line">    END_IF</span><br><span class="line">END_IF</span><br></pre></td></tr></table></figure><h3 id="4-完整程序"><a href="#4-完整程序" class="headerlink" title="4. 完整程序"></a>4. 完整程序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line">FUNCTION_BLOCK DFB_CompensateOneFlag</span><br><span class="line"></span><br><span class="line">VAR_IN_OUT</span><br><span class="line">// 色标抓取轴</span><br><span class="line">inAxis1: AXIS_REF_SM3;</span><br><span class="line">END_VAR</span><br><span class="line"></span><br><span class="line">VAR_INPUT</span><br><span class="line">iTrig: INT;</span><br><span class="line">// 功能块启动</span><br><span class="line">bEnable: BOOL;</span><br><span class="line">// 色标信号</span><br><span class="line">bInput1: BOOL;</span><br><span class="line">// 主轴长度设置</span><br><span class="line">lrLength: LREAL;</span><br><span class="line">// 排版数</span><br><span class="line">lrQueue: LREAL;</span><br><span class="line">// 牵引速度偏移</span><br><span class="line">lrAdjust: LREAL;</span><br><span class="line">// 最大修正值</span><br><span class="line">lrMaxCorrectionValue: LREAL;</span><br><span class="line">// 修标目标长度</span><br><span class="line">lrTargetValue: LREAL;</span><br><span class="line">END_VAR</span><br><span class="line">VAR_OUTPUT</span><br><span class="line">bDone: BOOL;</span><br><span class="line">bBusy: BOOL;</span><br><span class="line">// 抓取误差值输出</span><br><span class="line">lrValueOut: LREAL;</span><br><span class="line">bError: BOOL;</span><br><span class="line">dwErrorID: DWORD;</span><br><span class="line">lrFirstValueOut: LREAL;</span><br><span class="line">END_VAR</span><br><span class="line">VAR</span><br><span class="line">Axis1: POINTER TO AXIS_REF_MAPPING_SM3;</span><br><span class="line">DMC_TouchProbeCyclically1: DMC_TouchProbeCyclically;</span><br><span class="line">dR_TRIG: ARRAY[1..10] OF R_TRIG;</span><br><span class="line">lrFirstData: ARRAY[1..5] OF LREAL;</span><br><span class="line">dataTrigger: DL_MotionControl.DMC_TRIGGER_REF;</span><br><span class="line">// 差值</span><br><span class="line">lrD_value: LREAL;</span><br><span class="line">// 抓取值</span><br><span class="line">lrGrabvalue: LREAL;</span><br><span class="line">// 高速抓取输出数值</span><br><span class="line">lrRecorPOS: LREAL;</span><br><span class="line">// 检测长度</span><br><span class="line">lrMeasurePos: LREAL;</span><br><span class="line">FB_SetPosition1: MC_SetPosition;</span><br><span class="line">lrD_value2: LREAL;</span><br><span class="line">R3: R_TRIG;</span><br><span class="line">R1: R_TRIG;</span><br><span class="line">// 丢标位置</span><br><span class="line">lrLossPos: LREAL;</span><br><span class="line">// 主轴牵引轴速比</span><br><span class="line">lrVirtualTractionSpeedRatio: LREAL;</span><br><span class="line">AA: LREAL;</span><br><span class="line">BB: LREAL;</span><br><span class="line">lrRecordedPosition1: LREAL;</span><br><span class="line">MC_TouchProbe: MC_TouchProbe;</span><br><span class="line">Trigger: SM3_Basic.TRIGGER_REF;</span><br><span class="line">END_VAR</span><br><span class="line">VAR_OUTPUT</span><br><span class="line">RecordedPosition: LREAL;</span><br><span class="line">END_VAR</span><br><span class="line">VAR</span><br><span class="line">TON2: TON;</span><br><span class="line">TON1: TON;</span><br><span class="line">END_VAR</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//无编码器色标功能块（单个色标信号）</span><br><span class="line"></span><br><span class="line">Axis1:=ADR(inAxis1);</span><br><span class="line"></span><br><span class="line">IFbDone THEN </span><br><span class="line">bDone:=FALSE;</span><br><span class="line">END_IF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//位置归零功能块复位</span><br><span class="line">IF FB_SetPosition1.Done OR  FB_SetPosition1.Busy  OR FB_SetPosition1.Error THEN </span><br><span class="line">FB_SetPosition1.Execute:=FALSE;</span><br><span class="line">END_IF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//功能块启动</span><br><span class="line">dR_TRIG[1](CLK:=bEnable);</span><br><span class="line">IF dR_TRIG[1].Q</span><br><span class="line">THEN</span><br><span class="line">//MC_TouchProbe.Execute:=TRUE;//高速循环抓取功能块启动</span><br><span class="line">//FB_SetPosition1.Execute:=TRUE;//位置归零功能块启动</span><br><span class="line">bError:=FALSE;</span><br><span class="line">lrFirstData[3]:=0;</span><br><span class="line">lrFirstData[2]:=0;</span><br><span class="line">lrFirstData[1]:=0;</span><br><span class="line">END_IF</span><br><span class="line"></span><br><span class="line">(********************功能块运行中显示***********************)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IF bEnable</span><br><span class="line">THEN </span><br><span class="line">TON1(IN:=NOT MC_TouchProbe.Done , PT:=T#2MS , Q=&gt; , ET=&gt; );</span><br><span class="line">bBusy:=TRUE;</span><br><span class="line">IF  TON1.Q THEN MC_TouchProbe.Execute:=TRUE;END_IF</span><br><span class="line">END_IF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(*******************循环高速抓取功能块************************)</span><br><span class="line">TON2(IN:= , PT:=T#2MS , Q=&gt; , ET=&gt; );</span><br><span class="line">IF MC_TouchProbe.Done THEN TON2.IN:=TRUE;END_IF</span><br><span class="line">IF TON2.Q THEN MC_TouchProbe.Execute:=FALSE; TON2.IN:=FALSE; END_IF</span><br><span class="line"></span><br><span class="line">Trigger.iTriggerNumber:=iTrig;//抓取点选择</span><br><span class="line">Trigger.bFastLatching:=1;</span><br><span class="line">//Trigger.bInput:=</span><br><span class="line">//Trigger.bActive:=</span><br><span class="line">MC_TouchProbe(Axis:= Axis1^, TriggerInput:= Trigger, WindowOnly:= FALSE, RecordedPosition=&gt;RecordedPosition );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IFbEnable  THEN </span><br><span class="line">//数值输出</span><br><span class="line">lrVirtualTractionSpeedRatio:=(lrLength)/((lrLength+lrAdjust));</span><br><span class="line">lrRecorPOS:=MC_TouchProbe.RecordedPosition*lrVirtualTractionSpeedRatio;</span><br><span class="line">FB_SetPosition1(Axis:= inAxis1 , Position:= 0, );</span><br><span class="line">//报警输出</span><br><span class="line">IF MC_TouchProbe.Error OR FB_SetPosition1.Error OR  (lrMaxCorrectionValue &lt;= 0) OR  (Axis1^.fActPosition*lrVirtualTractionSpeedRatio &gt; (lrLossPos+(lrQueue*lrLength)*3)) THEN </span><br><span class="line">bError :=TRUE;</span><br><span class="line">END_IF</span><br><span class="line">IF MC_TouchProbe.Error OR FB_SetPosition1.Error THEN </span><br><span class="line">dwErrorID:=1;</span><br><span class="line">END_IF</span><br><span class="line">IF (lrMaxCorrectionValue &lt;= 0)THEN </span><br><span class="line">dwErrorID:=2;</span><br><span class="line">END_IF</span><br><span class="line">AA:=Axis1^.fActPosition*lrVirtualTractionSpeedRatio;</span><br><span class="line">BB:=lrLossPos+(lrQueue*lrLength)*3;</span><br><span class="line">IF bBusy AND(Axis1^.fActPosition*lrVirtualTractionSpeedRatio &gt; (lrLossPos+(lrQueue*lrLength)*3)) THEN </span><br><span class="line">dwErrorID:=3;</span><br><span class="line">END_IF</span><br><span class="line"></span><br><span class="line">ELSE//******信号复位，数据归零</span><br><span class="line">bError:=FALSE;</span><br><span class="line">FB_SetPosition1.Execute:=FALSE;</span><br><span class="line">MC_TouchProbe.Execute:=FALSE;</span><br><span class="line">lrFirstValueOut:=0;</span><br><span class="line">lrLossPos:=0;</span><br><span class="line">lrFirstData[5]:=0;</span><br><span class="line">lrFirstData[4]:=0;</span><br><span class="line">lrFirstData[3]:=0;</span><br><span class="line">lrFirstData[2]:=0;</span><br><span class="line">lrFirstData[1]:=0;</span><br><span class="line">lrValueOut:=0;</span><br><span class="line">lrD_value:=0;</span><br><span class="line">dwErrorID:=0;</span><br><span class="line">END_IF</span><br><span class="line"></span><br><span class="line">(*********************色标误差滤波、计算************************)</span><br><span class="line">IF bEnable AND bBusy THEN </span><br><span class="line">R1(CLK:= ABS(Axis1^.fActPosition*lrVirtualTractionSpeedRatio)-lrFirstData[1]&gt; ((lrQueue*lrLength)*1.2), Q=&gt; );</span><br><span class="line">R3(CLK:=MC_TouchProbe.Done, Q=&gt; );</span><br><span class="line">IF  R3.Q THEN </span><br><span class="line">lrFirstData[5]:=lrFirstData[4];</span><br><span class="line">lrFirstData[4]:=lrFirstData[3];</span><br><span class="line">lrFirstData[3]:=lrFirstData[2];</span><br><span class="line">lrFirstData[2]:=lrFirstData[1];</span><br><span class="line">lrFirstData[1]:=lrRecorPOS;</span><br><span class="line">IF lrFirstData[2]&gt;0 THEN</span><br><span class="line">IF ((MATH.fmod(lrX:=(lrRecorPOS-lrFirstData[2]) , lrM:=(lrQueue*lrLength))&gt;= (lrQueue*lrLength)*0.9))//前80%误检测排查</span><br><span class="line">OR ((MATH.fmod(lrX:=(lrRecorPOS-lrFirstData[2]) , lrM:=(lrQueue*lrLength))&lt;= (lrQueue*lrLength)*0.1))//超过袋长20%误检测排查 </span><br><span class="line">THEN </span><br><span class="line">lrLossPos:=lrRecorPOS;</span><br><span class="line">IF ABS(MATH.fmod(lrX:=lrFirstData[1],lrM:=(lrQueue*lrLength))-(MATH.fmod(lrX:=lrFirstData[2],lrM:=(lrQueue*lrLength))))&lt;(lrQueue*lrLength)*0.05</span><br><span class="line">THEN </span><br><span class="line">lrD_value:= (MATH.fmod(lrX:=lrFirstData[1] , lrM:=(lrQueue*lrLength) )-(MATH.fmod(lrX:=lrFirstData[2] , lrM:=(lrQueue*lrLength))));</span><br><span class="line">END_IF</span><br><span class="line">IF (MATH.fmod(lrX:=lrFirstData[1],lrM:=(lrQueue*lrLength))-(MATH.fmod(lrX:=lrFirstData[2],lrM:=(lrQueue*lrLength))))&gt;(lrQueue*lrLength)*0.05</span><br><span class="line">THEN</span><br><span class="line">lrD_value:=((MATH.fmod(lrX:=lrFirstData[1],lrM:=(lrQueue*lrLength))-(lrQueue*lrLength))-(MATH.fmod(lrX:=lrFirstData[2],lrM:=(lrQueue*lrLength))));</span><br><span class="line">ELSIF (MATH.fmod(lrX:=lrFirstData[1],lrM:=(lrQueue*lrLength))-(MATH.fmod(lrX:=lrFirstData[2],lrM:=(lrQueue*lrLength))))&lt;-((lrQueue*lrLength)*0.05)</span><br><span class="line">THEN </span><br><span class="line">lrD_value:=((MATH.fmod(lrX:=lrFirstData[1],lrM:=(lrQueue*lrLength))+(lrQueue*lrLength))-(MATH.fmod(lrX:=lrFirstData[2],lrM:=(lrQueue*lrLength))));</span><br><span class="line">END_IF</span><br><span class="line">//lrD_value:=(lrFirstData[1]-lrFirstData[2])-lrTargetValue;</span><br><span class="line">lrValueOut := MIN(MAX(lrD_value, -lrMaxCorrectionValue), lrMaxCorrectionValue);</span><br><span class="line">// IF lrD_value&gt;= lrMaxCorrectionValue</span><br><span class="line">// THEN </span><br><span class="line">// lrValueOut:= lrMaxCorrectionValue;</span><br><span class="line">// END_IF</span><br><span class="line">// IF  lrD_value&lt;= (lrMaxCorrectionValue * -1)</span><br><span class="line">// THEN </span><br><span class="line">// lrValueOut:= (lrMaxCorrectionValue * -1);</span><br><span class="line">// END_IF</span><br><span class="line">// IF ABS(lrD_value) &lt; lrMaxCorrectionValue</span><br><span class="line">// THEN </span><br><span class="line">// lrValueOut:= lrD_value;</span><br><span class="line">// END_IF</span><br><span class="line">bDone:=TRUE;</span><br><span class="line">ELSE</span><br><span class="line">lrFirstData[1]:=lrFirstData[2];</span><br><span class="line">lrFirstData[2]:=lrFirstData[3];</span><br><span class="line">lrFirstData[3]:=lrFirstData[4];</span><br><span class="line">lrFirstData[4]:=lrFirstData[5];</span><br><span class="line">END_IF</span><br><span class="line">ELSE</span><br><span class="line">lrFirstValueOut:=lrRecorPOS;</span><br><span class="line">END_IF</span><br><span class="line">END_IF</span><br><span class="line">IF R1.Q</span><br><span class="line">THEN</span><br><span class="line">// lrFirstData[4]:=lrFirstData[3];</span><br><span class="line">// lrFirstData[3]:=lrFirstData[2];</span><br><span class="line">// lrFirstData[2]:=lrFirstData[1];</span><br><span class="line">// lrFirstData[1]:=lrFirstData[1]+(lrQueue*lrLength);</span><br><span class="line">lrValueOut:=0.0;</span><br><span class="line">bDone:=TRUE;</span><br><span class="line">END_IF</span><br><span class="line">END_IF</span><br></pre></td></tr></table></figure><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="输入参数"><a href="#输入参数" class="headerlink" title="输入参数"></a>输入参数</h3><table><thead><tr><th>参数名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>bEnable</td><td>BOOL</td><td>功能块使能信号</td></tr><tr><td>bInput1</td><td>BOOL</td><td>色标输入信号</td></tr><tr><td>lrLength</td><td>LREAL</td><td>主轴长度</td></tr><tr><td>lrQueue</td><td>LREAL</td><td>排版数量</td></tr><tr><td>lrAdjust</td><td>LREAL</td><td>牵引速度偏移量</td></tr><tr><td>lrMaxCorrectionValue</td><td>LREAL</td><td>最大修正值</td></tr><tr><td>lrTargetValue</td><td>LREAL</td><td>目标修正值</td></tr></tbody></table><h3 id="输出参数"><a href="#输出参数" class="headerlink" title="输出参数"></a>输出参数</h3><table><thead><tr><th>参数名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>bDone</td><td>BOOL</td><td>完成标志</td></tr><tr><td>bBusy</td><td>BOOL</td><td>忙标志</td></tr><tr><td>lrValueOut</td><td>LREAL</td><td>补偿值输出</td></tr><tr><td>bError</td><td>BOOL</td><td>错误标志</td></tr><tr><td>dwErrorID</td><td>DWORD</td><td>错误代码</td></tr></tbody></table><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ol><li>印刷机械的套色控制</li><li>包装机械的色标定位</li><li>标签印刷机的色标跟踪</li><li>软包装设备的色标补偿</li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>确保输入参数在合理范围内</li><li>色标信号需要稳定可靠</li><li>主轴速度变化不宜过大</li><li>建议在使用前进行参数校准</li></ol>]]></content>
      
      
      <categories>
          
          <category> 控制器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 补偿 </tag>
            
            <tag> 色标抓取 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>台达触摸屏在工业自动化中的应用</title>
      <link href="/2025/01/22/%E5%8F%B0%E8%BE%BE%E8%A7%A6%E6%91%B8%E5%B1%8F%E5%9C%A8%E5%B7%A5%E4%B8%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
      <url>/2025/01/22/%E5%8F%B0%E8%BE%BE%E8%A7%A6%E6%91%B8%E5%B1%8F%E5%9C%A8%E5%B7%A5%E4%B8%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="台达触摸屏在工业自动化中的应用"><a href="#台达触摸屏在工业自动化中的应用" class="headerlink" title="台达触摸屏在工业自动化中的应用"></a>台达触摸屏在工业自动化中的应用</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在现代工业自动化系统中，人机界面（HMI）扮演着至关重要的角色。作为工业自动化领域的领先品牌，台达电子（Delta Electronics）推出的触摸屏产品以其卓越的性能和可靠性，在众多工业应用中广受好评。</p><h2 id="台达触摸屏产品概述"><a href="#台达触摸屏产品概述" class="headerlink" title="台达触摸屏产品概述"></a>台达触摸屏产品概述</h2><h3 id="产品系列"><a href="#产品系列" class="headerlink" title="产品系列"></a>产品系列</h3><p>台达触摸屏产品线丰富，主要包含以下系列：</p><table><thead><tr><th>系列</th><th>特点</th><th>适用场景</th></tr></thead><tbody><tr><td>DOP-100</td><td>入门级产品，性价比高</td><td>小型设备监控</td></tr><tr><td>DOP-B</td><td>中端产品，功能全面</td><td>中型生产线控制</td></tr><tr><td>DOP-W</td><td>高端产品，支持多语言和复杂应用</td><td>大型自动化系统</td></tr></tbody></table><h3 id="技术参数"><a href="#技术参数" class="headerlink" title="技术参数"></a>技术参数</h3><ul><li>屏幕尺寸：7”-15”</li><li>分辨率：800x480 - 1920x1080</li><li>处理器：ARM Cortex-A8</li><li>内存：128MB - 512MB</li><li>存储：256MB - 1GB</li></ul><h2 id="主要功能特点"><a href="#主要功能特点" class="headerlink" title="主要功能特点"></a>主要功能特点</h2><ol><li>高分辨率触摸屏</li><li>强大的数据处理能力</li><li>丰富的通讯接口</li><li>直观的编程软件</li><li>可靠的工业级设计</li></ol><h2 id="典型应用场景"><a href="#典型应用场景" class="headerlink" title="典型应用场景"></a>典型应用场景</h2><ul><li>生产线监控</li><li>设备状态显示</li><li>参数设置与调整</li><li>报警信息管理</li><li>数据采集与分析</li></ul><h2 id="编程与配置方法"><a href="#编程与配置方法" class="headerlink" title="编程与配置方法"></a>编程与配置方法</h2><p>台达提供DOPSoft编程软件，支持：</p><ul><li>图形化界面设计</li><li>数据标签管理</li><li>报警系统配置</li><li>历史数据记录</li><li>远程监控功能</li></ul><h2 id="维护与故障排除"><a href="#维护与故障排除" class="headerlink" title="维护与故障排除"></a>维护与故障排除</h2><p>常见问题及解决方法：</p><ol><li>触摸屏无响应：检查电源和通讯连接</li><li>显示异常：检查分辨率和刷新率设置</li><li>数据丢失：定期备份项目文件</li><li>通讯故障：检查协议设置和接线</li></ol><h2 id="总结与展望"><a href="#总结与展望" class="headerlink" title="总结与展望"></a>总结与展望</h2><p>台达触摸屏凭借其出色的性能和可靠性，在工业自动化领域占据重要地位。随着工业4.0的发展，台达将继续推出更多创新产品，为智能制造提供强有力的支持。</p>]]></content>
      
      
      <categories>
          
          <category> 触摸屏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人机界面 </tag>
            
            <tag> 工业自动化 </tag>
            
            <tag> 台达 </tag>
            
            <tag> HMI </tag>
            
            <tag> 触摸屏 </tag>
            
            <tag> 台达DOP </tag>
            
            <tag> 工业控制 </tag>
            
            <tag> 智能制造 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
